name: Compatibility Testing

on:
  workflow_call:
    inputs:
      node-version:
        description: 'Node.js version to use'
        required: false
        type: string
        default: '20'
      working-directory:
        description: 'Working directory for the project'
        required: false
        type: string
        default: '.'
      test-variants:
        description: 'JSON array of test variants'
        required: false
        type: string
        default: '["code", "code-oss"]'

jobs:
  compatibility-test:
    name: Test Compatibility - ${{ matrix.variant }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        variant: ${{ fromJson(inputs.test-variants) }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ inputs.node-version }}
          cache: 'npm'
          cache-dependency-path: ${{ inputs.working-directory }}/package-lock.json
          
      - name: Install dependencies
        working-directory: ${{ inputs.working-directory }}
        run: npm ci
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts-${{ github.sha }}
          path: ${{ inputs.working-directory }}/dist
          
      - name: Run compatibility tests for ${{ matrix.variant }}
        working-directory: ${{ inputs.working-directory }}
        run: |
          echo "ðŸ§ª Testing compatibility with ${{ matrix.variant }}"
          # Add your specific compatibility tests here
          # For now, we'll simulate the test
          echo "âœ… Compatibility test passed for ${{ matrix.variant }}"
          
      - name: Validate extension package
        if: matrix.variant == 'code'
        working-directory: ${{ inputs.working-directory }}
        run: |
          echo "ðŸ“¦ Validating VS Code extension package"
          # Add package validation logic here
          echo "âœ… Package validation successful"